<!-- (c) Kyle Sabo 2011 -->
<Controls:MetroContentControl x:Class="mangle_port.MainWindowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:local="clr-namespace:mangle_port"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             local:AttachedProperties.RegisterCommandBindings="{Binding CommandBindings}">
    <Controls:MetroContentControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Resources/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Controls:MetroContentControl.Resources>
    <DockPanel>
        <DockPanel.Resources>
            <!-- style for WP7/Circle button -->
            <Style x:Key="MetroCircleButtonStyle"
                   TargetType="{x:Type Button}">
                <Setter Property="Background"
                        Value="{DynamicResource ButtonNormalBackground}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource ButtonNormalBorder}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid x:Name="grid"
                                  Background="#02FFFFFF">
                                <Ellipse x:Name="ellipsebg"
                                         Margin="4"
                                         Stroke="{TemplateBinding Foreground}"
                                         StrokeThickness="0"
                                         VerticalAlignment="Stretch" />
                                <Ellipse x:Name="ellipse"
                                         Margin="4"
                                         Stroke="{TemplateBinding Foreground}"
                                         StrokeThickness="2"
                                         VerticalAlignment="Stretch" />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="ellipsebg"
                                            Property="Fill"
                                            Value="{DynamicResource BlackBrush}" />
                                    <Setter TargetName="ellipsebg"
                                            Property="Opacity"
                                            Value="0.2" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="ellipse"
                                            Property="Opacity"
                                            Value="1" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="False">
                                    <Setter TargetName="ellipse"
                                            Property="Opacity"
                                            Value=".5" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                         Value="true" />
                                <Trigger Property="ToggleButton.IsChecked"
                                         Value="true" />
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Foreground"
                                            Value="#ADADAD" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     From="0.0"
                                                     To="1.0"
                                                     Duration="0:0:1.0">
                                        <DoubleAnimation.EasingFunction>
                                            <QuadraticEase EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                    <!--<Trigger Property="Visibility" Value="Collapsed">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                     From="1.0"
                                                     To="0.0"
                                                     Duration="0:0:2.0">
                                        <DoubleAnimation.EasingFunction>
                                            <ExponentialEase Exponent="9" EasingMode="EaseOut" />
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>-->
                </Style.Triggers>
            </Style>
            
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        </DockPanel.Resources>
        <!--<Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="New"
                          Command="ApplicationCommands.New" />
                <MenuItem Header="Open..."
                          Command="ApplicationCommands.Open" />
                <MenuItem Header="Save"
                          Command="ApplicationCommands.Save" />
                <MenuItem Header="Save as..."
                          Command="ApplicationCommands.SaveAs" />
            </MenuItem>
            <MenuItem Header="Book">
                <MenuItem Header="Options..." />
                <MenuItem Header="Add">
                    <MenuItem Header="Add Files..." 
                              Command="local:MainWindowCommands.AddFiles" />
                    <MenuItem Header="Add Directory..."
                              Command="local:MainWindowCommands.AddDirectory" />
                </MenuItem>
                <MenuItem Header="Remove"
                          Command="local:MainWindowCommands.RemoveFiles" />
                <MenuItem Header="Shift">
                    <MenuItem Header="Up"
                              Command="ComponentCommands.MoveUp" />
                    <MenuItem Header="Down"
                              Command="ComponentCommands.MoveDown" />
                </MenuItem>
                <MenuItem Header="Export..."
                          Command="local:MainWindowCommands.ExportFiles" />
            </MenuItem>
        </Menu>-->
        <DockPanel DockPanel.Dock="Bottom">
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
            		    Height="55"
                        Width="55"
                        VerticalAlignment="Top"
                        Visibility="{Binding RemoveFilesVisibility}"
                        Command="ComponentCommands.MoveUp">
                    <Rectangle Width="28" Height="28">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_arrow_up}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
            		    Height="55"
                        Width="55"
                        VerticalAlignment="Top"
                        Visibility="{Binding RemoveFilesVisibility}"
                        Command="ComponentCommands.MoveDown">
                    <Rectangle Width="28" Height="28">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_arrow_down}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
            		    Height="55"
                        Width="55"
                        VerticalAlignment="Top"
                        Visibility="{Binding RemoveFilesVisibility}"
                        Command="local:MainWindowCommands.RemoveFiles">
                    <Rectangle Width="28" Height="28">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_delete}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
            		    Height="55"
                        Width="55"
                        VerticalAlignment="Top"
                        Command="local:MainWindowCommands.AddFiles">
                    <Rectangle Width="28" Height="28">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_add}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
            </StackPanel>
            <Button Style="{DynamicResource MetroCircleButtonStyle}"
            		Height="55"
                    Width="55"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                    DockPanel.Dock="Left"
                    Visibility="{Binding ExportIsEnabled, Converter={StaticResource booleanToVisibilityConverter}}"
                    Command="local:MainWindowCommands.ExportFiles">
                <Rectangle Width="28" Height="28">
                    <Rectangle.Fill>
                        <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_save}" />
                    </Rectangle.Fill>
                </Rectangle>
            </Button>
        </DockPanel>
        <ListView ItemsSource="{Binding Path=ImageFileList, Mode=OneWay}"
                  SelectedItem="{Binding Path=SelectedImage, Mode=TwoWay}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Filename"
                                    DisplayMemberBinding="{Binding DisplayName}"/>
                    <GridViewColumn Header="Output Filename"
                                    DisplayMemberBinding="{Binding OutputName}"/>
                </GridView>
            </ListView.View>
        </ListView>
        <!--<ListBox ItemsSource="{Binding Path=ImageFileList, Mode=OneWay}"
                 SelectedItem="{Binding Path=SelectedImage, Mode=TwoWay}">
            <ListBox.ItemTemplate>
                <DataTemplate DataType="FileConversionInfo">
                    <DockPanel>
                        <TextBlock Text="{Binding Path=DisplayName, Mode=OneWay}"
                                   DockPanel.Dock="Left" />
                        <TextBlock Text="{Binding Path=OutputName, Mode=OneWay}"
                                   DockPanel.Dock="Right" />
                        <DockPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Up"
                                          Command="ComponentCommands.MoveUp" />
                                <MenuItem Header="Down"
                                          Command="ComponentCommands.MoveDown" />
                                <MenuItem Header="Remove"
                                          Command="local:MainWindowCommands.RemoveFiles" />
                            </ContextMenu>
                        </DockPanel.ContextMenu>
                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add Files..."
                              Command="local:MainWindowCommands.AddFiles" />
                </ContextMenu>
            </ListBox.ContextMenu>
        </ListBox>-->
    </DockPanel>
</Controls:MetroContentControl>

<!-- (c) Kyle Sabo 2011 -->
<Controls:MetroContentControl x:Class="mangle_port.MainWindowView"
                              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                              xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                              xmlns:local="clr-namespace:mangle_port"
                              mc:Ignorable="d"
                              d:DesignHeight="300" d:DesignWidth="600"
                              AllowDrop="True"
                              local:AttachedProperties.RegisterCommandBindings="{Binding CommandBindings}">
    <Controls:MetroContentControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Controls:MetroContentControl.Resources>
    <DockPanel>
        <DockPanel.Resources>
            <!-- style for WP7/Circle button -->
            <Style x:Key="MetroCircleButtonStyle"
                   TargetType="{x:Type Button}">
                <Setter Property="Background"
                        Value="{DynamicResource ButtonNormalBackground}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource ButtonNormalBorder}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <StackPanel>
                                <Grid x:Name="grid"
                                      Background="#02FFFFFF"
                                      MinWidth="{Binding ActualHeight, ElementName=grid}"
                                      MinHeight="{Binding ActualWidth, ElementName=grid}">
                                    <Ellipse x:Name="ellipsebg"
                                         Margin="8"
                                         Stroke="{TemplateBinding Foreground}"
                                         StrokeThickness="0"
                                         VerticalAlignment="Stretch" />
                                    <Ellipse x:Name="ellipse"
                                         Margin="8"
                                         Stroke="{TemplateBinding Foreground}"
                                         StrokeThickness="2"
                                         VerticalAlignment="Stretch" />
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Grid>
                                <TextBlock HorizontalAlignment="Center" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=ToolTip}" />
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="ellipsebg"
                                            Property="Fill"
                                            Value="{DynamicResource BlackBrush}" />
                                    <Setter TargetName="ellipsebg"
                                            Property="Opacity"
                                            Value="0.2" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="ellipse"
                                            Property="Opacity"
                                            Value="1" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="False">
                                    <Setter TargetName="ellipse"
                                            Property="Opacity"
                                            Value=".5" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                         Value="true" />
                                <Trigger Property="ToggleButton.IsChecked"
                                         Value="true" />
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Foreground"
                                            Value="#ADADAD" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        </DockPanel.Resources>
        <!--<Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="New"
                          Command="ApplicationCommands.New" />
                <MenuItem Header="Open..."
                          Command="ApplicationCommands.Open" />
                <MenuItem Header="Save"
                          Command="ApplicationCommands.Save" />
                <MenuItem Header="Save as..."
                          Command="ApplicationCommands.SaveAs" />
            </MenuItem>
            <MenuItem Header="Book">
                <MenuItem Header="Options..." />
                <MenuItem Header="Add">
                    <MenuItem Header="Add Files..." 
                              Command="local:MainWindowCommands.AddFiles" />
                    <MenuItem Header="Add Directory..."
                              Command="local:MainWindowCommands.AddDirectory" />
                </MenuItem>
                <MenuItem Header="Remove"
                          Command="local:MainWindowCommands.RemoveFiles" />
                <MenuItem Header="Shift">
                    <MenuItem Header="Up"
                              Command="ComponentCommands.MoveUp" />
                    <MenuItem Header="Down"
                              Command="ComponentCommands.MoveDown" />
                </MenuItem>
                <MenuItem Header="Export..."
                          Command="local:MainWindowCommands.ExportFiles" />
            </MenuItem>
        </Menu>-->
        <DockPanel DockPanel.Dock="Bottom">
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Background="{DynamicResource AccentColorBrush}">
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
                        Width="60"
                        Margin="5"
                        VerticalAlignment="Top"
                        ToolTip="Move up"
                        Visibility="{Binding RemoveFilesVisibility}"
                        Command="ComponentCommands.MoveUp">
                    <Rectangle Width="24" Height="24">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_arrow_up}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
                        Width="60"
                        Margin="5"
                        VerticalAlignment="Top"
                        ToolTip="Move down"
                        Visibility="{Binding RemoveFilesVisibility}"
                        Command="ComponentCommands.MoveDown">
                    <Rectangle Width="24" Height="24">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_arrow_down}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
                        Width="60"
                        Margin="5"
                        VerticalAlignment="Top"
                        ToolTip="Remove"
                        Visibility="{Binding RemoveFilesVisibility}"
                        Command="local:MainWindowCommands.RemoveFiles">
                    <Rectangle Width="24" Height="24">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_delete}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
                        Width="60"
                        Margin="5"
                        VerticalAlignment="Top"
                        ToolTip="Add"
                        Command="local:MainWindowCommands.AddFiles">
                    <Rectangle Width="24" Height="24">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_add}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
            </StackPanel>
            <StackPanel DockPanel.Dock="Left" Background="{DynamicResource AccentColorBrush}">
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
                        Width="60"
                        Margin="5"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left"
                        ToolTip="Save"
                        Visibility="{Binding ExportIsEnabled, Converter={StaticResource booleanToVisibilityConverter}}"
                        Command="local:MainWindowCommands.ExportFiles">
                    <Rectangle Width="24" Height="24">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_save}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
            </StackPanel>
        </DockPanel>
        <ListView ItemsSource="{Binding Path=ImageFileList, Mode=OneWay}"
                  SelectedItem="{Binding Path=SelectedImage, Mode=TwoWay}"
                  Margin="10,5"
                  BorderThickness="0">
            <ListView.Resources>
                <Style TargetType="{x:Type GridViewColumnHeader}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
            </ListView.Resources>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Filename">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="Segoe UI" FontSize="14" Foreground="DimGray" Text="{Binding DisplayName}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Output Filename">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="Segoe UI" FontSize="14" Foreground="DimGray" Text="{Binding OutputName}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <StackPanel Background="WhiteSmoke" Orientation="Horizontal">
                                    <Rectangle Name="rect" Width="3" Fill="White" />
                                    <GridViewRowPresenter Content="{TemplateBinding Content}"
                                                          Columns="{TemplateBinding GridView.ColumnCollection}"/>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" TargetName="rect" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.Style>
                <Style TargetType="ListView">
                    <Style.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListView">
                                        <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                            <TextBlock DockPanel.Dock="Top" FontFamily="Segoe UI" FontSize="20" Foreground="DimGray" Text="no images"/>
                                            <TextBlock DockPanel.Dock="Top" FontFamily="Segoe UI" FontSize="14" Foreground="DimGray" Text="add images to convert"/>
                                        </DockPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.Style>
        </ListView>
    </DockPanel>
</Controls:MetroContentControl>

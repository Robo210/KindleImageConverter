<!-- (c) Kyle Sabo 2011 -->
<Controls:MetroContentControl x:Class="mangle_port.MainWindowView"
                              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                              xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                              xmlns:myControls="clr-namespace:MyControls"
                              xmlns:local="clr-namespace:mangle_port"
                              mc:Ignorable="d"
                              d:DesignHeight="550" d:DesignWidth="800"
                              AllowDrop="True"
                              local:AttachedProperties.RegisterCommandBindings="{Binding CommandBindings}">
    <Controls:MetroContentControl.Resources>
        <ResourceDictionary>
            <Color x:Key="BackgroundBlue">#02FFFFFF</Color>
            <SolidColorBrush x:Key="DockBackgroundBrush" Color="{StaticResource BackgroundBlue}" />
            
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Resources/Icons.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Controls:MetroContentControl.Resources>
    <DockPanel>
        <DockPanel.Resources>
            <Style TargetType="{x:Type Button}">
                <!-- Set up a default style so the terrible one in the resources isn't used -->
                <Setter Property="Background"
                        Value="{DynamicResource ButtonNormalBackground}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource ButtonNormalBorder}" />
            </Style>
            <!-- style for WP7/Circle button -->
            <Style x:Key="MetroCircleButtonStyle"
                   TargetType="{x:Type Button}">
                <Setter Property="Background"
                        Value="{DynamicResource ButtonNormalBackground}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource ButtonNormalBorder}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <StackPanel>
                                <Grid x:Name="grid"
                                      Background="{StaticResource DockBackgroundBrush}"
                                      MinWidth="{Binding ActualHeight, ElementName=grid}"
                                      MinHeight="{Binding ActualWidth, ElementName=grid}">
                                    <Ellipse x:Name="ellipsebg"
                                         Margin="8"
                                         Stroke="{TemplateBinding Foreground}"
                                         StrokeThickness="0"
                                         VerticalAlignment="Stretch" />
                                    <Ellipse x:Name="ellipse"
                                         Margin="8"
                                         Stroke="{TemplateBinding Foreground}"
                                         StrokeThickness="2"
                                         VerticalAlignment="Stretch" />
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Grid>
                                <TextBlock HorizontalAlignment="Center" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}, Path=ToolTip}" />
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter TargetName="ellipsebg"
                                            Property="Fill"
                                            Value="{DynamicResource BlackBrush}" />
                                    <Setter TargetName="ellipsebg"
                                            Property="Opacity"
                                            Value="0.2" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter TargetName="ellipse"
                                            Property="Opacity"
                                            Value="1" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="False">
                                    <Setter TargetName="ellipse"
                                            Property="Opacity"
                                            Value=".5" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                                         Value="true" />
                                <Trigger Property="ToggleButton.IsChecked"
                                         Value="true" />
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Foreground"
                                            Value="#ADADAD" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Visibility" Value="Visible">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.400" Value="1" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type myControls:SplitButton}">
                <Setter Property="Background"
                        Value="{StaticResource DockBackgroundBrush}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Padding"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type myControls:SplitButton}">
                            <Grid x:Name="PART_Container"
                                  VerticalAlignment="Stretch"
                                  Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="60" /> <!-- Set to 60 rather than * so the Designer view doesn't throw a fit -->
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid x:Name="PART_Button"
                                      Grid.Column="0"
                                      Grid.Row="0"
                                      Width="60"
                                      Background="{StaticResource DockBackgroundBrush}"
                                      MinWidth="{Binding ActualHeight, ElementName=PART_Button}"
                                      MinHeight="{Binding ActualWidth, ElementName=PART_Button}">
                                    <Ellipse x:Name="ellipsebg"
                                             Margin="8"
                                             Stroke="{TemplateBinding Foreground}"
                                             StrokeThickness="0"
                                             VerticalAlignment="Stretch" />
                                    <Ellipse x:Name="ellipse"
                                             Margin="8"
                                             Stroke="{TemplateBinding Foreground}"
                                             StrokeThickness="2"
                                             VerticalAlignment="Stretch" />
                                    <ContentPresenter HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Margin="{TemplateBinding Padding}"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      Content="{TemplateBinding Icon}"/>
                                </Grid>
                                <ContentControl x:Name="PART_ButtonContent"
                                                MinWidth="50" 
                                                Margin="2"
                                                Grid.Column="1"
                                                Grid.Row="0"
                                                HorizontalAlignment="Stretch"
                                                VerticalContentAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                                                ContentStringFormat="{TemplateBinding ItemStringFormat}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                Content="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                ContentTemplate="{TemplateBinding ItemTemplate}" />
                                <Button x:Name="PART_Expander"
                                        Grid.Column="2"
                                        Grid.Row="0"
                                        Grid.RowSpan="2"
                                        VerticalAlignment="Stretch"
                                        Width="25"
                                        HorizontalAlignment="Stretch"
                                        Background="{DynamicResource ButtonNormalBackground}"
                                        HorizontalContentAlignment="Center"
                                        VerticalContentAlignment="Center">
                                    <Button.Content>
                                        <Rectangle Name="PART_Rectangle"
                                                Height="6"
                                                Width="10"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Fill="{DynamicResource BlackColorBrush}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill">
                                                <VisualBrush.Visual>
                                                    <Canvas Width="18"
                                                            Height="18"
                                                            Clip="F1 M 0,0L 48,0L 48,48L 0,48L 0,0"
                                                            UseLayoutRounding="False">
                                                        <Path Width="18"
                                                                Height="16"
                                                                Canvas.Left="14.9063"
                                                                Canvas.Top="15.75"
                                                                Stretch="Fill"
                                                                Fill="{DynamicResource BlackColorBrush}"
                                                                Data="F1 M 23.9063,25L 25.9063,23L 32.9063,15.75L 32.9063,22.25L 23.9062,31.75L 14.9063,22.25L 14.9063,15.75L 21.9063,23L 23.9063,25 Z " />
                                                    </Canvas>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                    </Button.Content>
                                </Button>
                                <TextBlock HorizontalAlignment="Center"
                                           Grid.Row="1"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="3"
                                           Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type myControls:SplitButton}}, Path=ToolTip}" />
                                <Popup Name="PART_Popup"
                                       IsOpen="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       PlacementTarget="{Binding ElementName=PART_ButtonContent}"
                                       PopupAnimation="Fade"
                                       MinWidth="{TemplateBinding ActualWidth}"
                                       StaysOpen="True">
                                    <ListBox x:Name="PART_ListBox"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Style="{DynamicResource VirtualisedMetroListBox}"
                                                SelectionMode="Single"
                                                SelectedItem="{Binding SelectedItem, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                SelectedIndex="{Binding SelectedIndex, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                                ItemTemplate="{TemplateBinding ItemTemplate}"
                                                ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                ItemStringFormat="{TemplateBinding ItemStringFormat}"
                                                ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                                ItemContainerStyleSelector="{TemplateBinding ItemContainerStyleSelector}"
                                                ItemsSource="{TemplateBinding ItemsSource}" />
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--
                                    <Trigger Property="IsPressed"
                                         Value="True">
                                        <Setter TargetName="ellipsebg"
                                            Property="Fill"
                                            Value="{DynamicResource BlackBrush}" />
                                        <Setter TargetName="ellipsebg"
                                            Property="Opacity"
                                            Value="0.2" />
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused"
                                         Value="true" />
                                    <Trigger Property="ToggleButton.IsChecked"
                                         Value="true" />
                                    <Trigger Property="IsEnabled"
                                         Value="false">
                                        <Setter Property="Foreground"
                                            Value="#ADADAD" />
                                    </Trigger>-->
                                <!--<Trigger Property="IsFocused"
                                         Value="True"
                                         SourceName="PART_Button">
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource AccentColorBrush}"
                                            TargetName="PART_Border" />
                                </Trigger>
                                <Trigger Property="IsFocused"
                                         Value="True"
                                         SourceName="PART_Expander">
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource AccentColorBrush}"
                                            TargetName="PART_Border" />
                                </Trigger>-->
                                <Trigger Property="IsMouseOver"
                                         Value="True"
                                         SourceName="PART_Container">
                                    <Setter TargetName="ellipse"
                                            Property="Opacity"
                                            Value="1" />
                                    <Setter TargetName="PART_Rectangle"
                                            Property="Opacity"
                                            Value="1" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="False"
                                         SourceName="PART_Container">
                                    <Setter TargetName="ellipse"
                                            Property="Opacity"
                                            Value=".5" />
                                    <Setter TargetName="PART_Rectangle"
                                            Property="Opacity"
                                            Value=".5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        </DockPanel.Resources>
        <DockPanel DockPanel.Dock="Bottom">
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Background="{DynamicResource AccentColorBrush}">
                <myControls:SplitButton VerticalContentAlignment="Center"
                                      HorizontalContentAlignment="Left"
                                      Margin="5"
                                      VerticalAlignment="Top"
                                      DisplayMemberPath="Name"
                                      ToolTip="Kindle Type"
                                      SelectedItem="{Binding Path=SelectedProfile, Mode=TwoWay}"
                                      ItemsSource="{Binding Profiles}">
                    <myControls:SplitButton.Icon>
                        <Rectangle Width="24" Height="24">
                            <Rectangle.Fill>
                                <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_book_list}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </myControls:SplitButton.Icon>
                </myControls:SplitButton>
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
                        Width="60"
                        Margin="5"
                        VerticalAlignment="Top"
                        ToolTip="Move up"
                        Visibility="{Binding RemoveFilesVisibility}"
                        Command="ComponentCommands.MoveUp">
                    <Rectangle Width="24" Height="24">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_arrow_up}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
                        Width="60"
                        Margin="5"
                        VerticalAlignment="Top"
                        ToolTip="Move down"
                        Visibility="{Binding RemoveFilesVisibility}"
                        Command="ComponentCommands.MoveDown">
                    <Rectangle Width="24" Height="24">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_arrow_down}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
                        Width="60"
                        Margin="5"
                        VerticalAlignment="Top"
                        ToolTip="Remove"
                        Visibility="{Binding RemoveFilesVisibility}"
                        Command="local:MainWindowCommands.RemoveFiles">
                    <Rectangle Width="24" Height="24">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_delete}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
                        Width="60"
                        Margin="5"
                        VerticalAlignment="Top"
                        ToolTip="Add"
                        Command="local:MainWindowCommands.AddFiles">
                    <Rectangle Width="24" Height="24">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_add}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
            </StackPanel>
            <StackPanel DockPanel.Dock="Left" Background="{DynamicResource AccentColorBrush}">
                <Button Style="{DynamicResource MetroCircleButtonStyle}"
                        Width="60"
                        Margin="5"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left"
                        ToolTip="Save"
                        Visibility="{Binding ExportIsEnabled, Converter={StaticResource booleanToVisibilityConverter}}"
                        Command="local:MainWindowCommands.ExportFiles">
                    <Rectangle Width="24" Height="24">
                        <Rectangle.Fill>
                            <VisualBrush Stretch="Fill"	Visual="{StaticResource appbar_save}" />
                        </Rectangle.Fill>
                    </Rectangle>
                </Button>
            </StackPanel>
        </DockPanel>
        <ListView ItemsSource="{Binding Path=ImageFileList, Mode=OneWay}"
                  SelectedItem="{Binding Path=SelectedImage, Mode=TwoWay}"
                  Margin="10,5"
                  BorderThickness="0">
            <ListView.Resources>
                <Style TargetType="{x:Type GridViewColumnHeader}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </Style>
            </ListView.Resources>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Filename">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="Segoe UI" FontSize="14" Foreground="DimGray" Text="{Binding DisplayName}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Output Filename">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="Segoe UI" FontSize="14" Foreground="DimGray" Text="{Binding OutputName}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <StackPanel Name="selected" Background="WhiteSmoke" Orientation="Horizontal">
                                    <Rectangle Name="rect" Width="3" Fill="White" />
                                    <GridViewRowPresenter Content="{TemplateBinding Content}"
                                                          Columns="{TemplateBinding GridView.ColumnCollection}"/>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter Property="Fill" Value="{DynamicResource AccentColorBrush}" TargetName="rect" />
                                        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" TargetName="selected" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.Style>
                <Style TargetType="ListView">
                    <Style.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListView">
                                        <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                                            <TextBlock DockPanel.Dock="Top" FontFamily="Segoe UI" FontSize="20" Foreground="DimGray" Text="no images"/>
                                            <TextBlock DockPanel.Dock="Top" FontFamily="Segoe UI" FontSize="14" Foreground="DimGray" Text="add images to convert"/>
                                        </DockPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ListView.Style>
        </ListView>
    </DockPanel>
</Controls:MetroContentControl>
